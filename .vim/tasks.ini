# vim: set fenc=utf-8 ft=dosini:

# define a new task named "file-build"
[file-build]

# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command=gcc "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"

# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_FILEDIR)

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=1

[file-run]
command=-position=bottomright "$(VIM_FILEPATH)"
command:c,cpp=-position=bottomright "$(VIM_PATHNOEXT)"
command:go=-position=bottomright "$(VIM_PATHNOEXT)"
command:python=-position=bottomright python3 "$(VIM_FILENAME)"
command:javascript=-position=bottomright node "$(VIM_FILENAME)"
command:sh=-position=bottomright sh "$(VIM_FILENAME)"
command:lua=-position=bottomright lua "$(VIM_FILENAME)"
command:perl=-position=bottomright perl "$(VIM_FILENAME)"
command:ruby=-position=bottomright ruby "$(VIM_FILENAME)"
output=terminal
cwd=$(VIM_FILEDIR)
save=2

